from typing import List

from app import db  # noqa
from .model import {{ capitalize(name) }}
from .interface import {{ capitalize(name) }}Interface


class {{ capitalize(name) }}Service:
    @staticmethod
    def get_all() -> List[{{ capitalize(name) }}]:
        return {{ capitalize(name) }}.query.all()

    @staticmethod
    def get_by_id({{ lower(name) }}_id: int) -> {{ capitalize(name) }}:
        return {{ capitalize(name) }}.query.get({{ lower(name) }}_id)

    @staticmethod
    def update({{ lower(name) }}: {{ capitalize(name) }}, {{ lower(name) }}_change_updates: {{ capitalize(name) }}Interface) -> {{ capitalize(name) }}:
        {{ lower(name) }}.update({{ lower(name) }}_change_updates)
        db.session.commit()
        return {{ lower(name) }}

    @staticmethod
    def delete_by_id({{ lower(name) }}_id: int) -> List[int]:
        {{ lower(name) }} = {{ capitalize(name) }}.query.filter({{ capitalize(name) }}.{{ lower(name) }}_id == {{ lower(name) }}_id).first()
        if not {{ lower(name) }}:
            return []
        db.session.delete({{ lower(name) }})
        db.session.commit()
        return [{{ lower(name) }}_id]

    @staticmethod
    def create(new_attrs: {{ capitalize(name) }}Interface) -> {{ capitalize(name) }}:
        new_{{ lower(name) }} = {{ capitalize(name) }}(
            {{ lower(name) }}_id=new_attrs["{{ lower(name) }}_id"],
            name=new_attrs["name"],
            description=new_attrs["description"],
        )

        db.session.add(new_{{ lower(name) }})
        db.session.commit()

        return new_{{ lower(name) }}
