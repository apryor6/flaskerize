from pytest import fixture, raises
from flask_sqlalchemy import SQLAlchemy

from app.test.fixtures import app, db  # noqa
from .model import {{ capitalize(name) }}


@fixture
def {{ lower(name) }}() -> {{ capitalize(name) }}:   # noqa
    return {{ capitalize(name) }}(
        {{ lower(name) }}_id = 1,
        name = "model name",
        description = "model description"
    )


def test_{{ capitalize(name) }}_init({{ lower(name) }}: {{ capitalize(name) }}):    # noqa
    assert {{ lower(name) }}


def test_{{ capitalize(name) }}_create({{ lower(name) }}: {{ capitalize(name) }}, db: SQLAlchemy):  # noqa
    try:
        db.session.add({{ lower(name) }})
        db.session.commit()
    except Exception:
        db.session.rollback()
        raise


def test_{{ capitalize(name) }}_retrieve({{ lower(name) }}: {{ capitalize(name) }}, db: SQLAlchemy):  # noqa
    try:
        db.session.add({{ lower(name) }})
        db.session.commit()
    except Exception:
        db.session.rollback()
        raise

    s = {{ capitalize(name) }}.query.first()
    assert s.__dict__ == {{ lower(name) }}.__dict__


def test_{{ capitalize(name) }}_update({{ lower(name) }}: {{ capitalize(name) }}, db: SQLAlchemy):  # noqa
    for k in {{ lower(name) }}.__dict__:
        if k not in ('_sa_instance_state', '{{ lower(name) }}_id', 'last_checked'):
            if type(k) == type("str"):
                {{ lower(name) }}.update({ k: 'Test Update' })
            elif type(k) == type(1):
                {{ lower(name) }}.update({ k: 99999 })

    try:
        db.session.add({{ lower(name) }})
        db.session.commit()
    except Exception:
        db.session.rollback()
        raise

    for k in {{ capitalize(name) }}.query.all()[0].__dict__:
        if k not in ('_sa_instance_state', '{{ lower(name) }}_id', 'last_checked'):
            if type(k) == type("str"):
                assert getattr({{ lower(name) }}, k) == 'Test Update'
            elif type(k) == type(1):
                assert getattr({{ lower(name) }}, k) == 99999
