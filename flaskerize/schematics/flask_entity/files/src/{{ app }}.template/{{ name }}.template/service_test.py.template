from pytest import fixture
from flask_sqlalchemy import SQLAlchemy

from {{ app }}.test.fixtures import app, db  # noqa F401

from .model import {{ capitalize(name) }}
from .service import {{ capitalize(name) }}Service
from .interface import {{ capitalize(name) }}Interface
from .interface_test import interface  # noqa F401


@fixture
def yin() -> {{ capitalize(name) }}:
    return {{ capitalize(name) }}(
        {{ name }}_id=1,
        name="Service Test Name 1",
        description="Service Test Description 1"
    )


@fixture
def yang() -> {{ capitalize(name) }}:
    return {{ capitalize(name) }}(
        {{ name }}_id=2,
        name="Service Test Name 2",
        description="Service Test Description 2"
    )


def test_get_all(yin: {{ capitalize(name) }}, yang: {{ capitalize(name) }}, db: SQLAlchemy):  # noqa F811
    db.session.add(yin)
    db.session.add(yang)
    db.session.commit()

    results: list[{{ capitalize(name) }}] = {{ capitalize(name) }}Service.get_all()

    assert len(results) == 2
    assert yin in results and yang in results


def test_get_by_id(yin: {{ capitalize(name) }}, db: SQLAlchemy):  # noqa F811
    db.session.add(yin)
    db.session.commit()

    results = {{ capitalize(name) }}Service.get_by_id(yin.{{ name }}_id)
    for k in vars(yin):
        assert getattr(yin, k) == getattr(results, k)


def test_update(yin: {{ capitalize(name) }},
                interface: {{ capitalize(name) }}Interface,  # noqa F811
                db: SQLAlchemy):  # noqa F811
    db.session.add(yin)
    db.session.commit()
    yin = {{ capitalize(name) }}.query.get(yin.{{ name }}_id)

    result = {{ capitalize(name) }}Service.update(yin, interface)

    for k in interface:
        assert getattr(result, k) == interface[k]


def test_delete_by_id(yin: {{ capitalize(name) }}, yang: {{ capitalize(name) }}, db: SQLAlchemy):  # noqa F811
    db.session.add(yin)
    db.session.add(yang)
    db.session.commit()

    {{ capitalize(name) }}Service.delete_by_id(1)
    results: list[{{ capitalize(name) }}] = {{ capitalize(name) }}.query.all()

    assert len(results) == 1
    assert yin not in results and yang in results


def test_delete_by_id_missing(db: SQLAlchemy):  # noqa F811
    results = {{ capitalize(name) }}Service.delete_by_id(42)
    assert len(results) == 0


def test_create(interface: {{ capitalize(name) }}Interface,  # noqa F811
                db: SQLAlchemy):  # noqa F811
    {{ capitalize(name) }}Service.create(interface)
    results: list[{{ capitalize(name) }}] = {{ capitalize(name) }}.query.all()

    assert len(results) == 1

    for k in interface:
        assert getattr(results[0], k) == interface[k]

